import 'cross-fetch/polyfill';
import { CLINetworkAdapter } from './network';
declare function getStacksWalletKey(_network: CLINetworkAdapter, args: string[]): Promise<string>;
declare function migrateSubdomains(_network: CLINetworkAdapter, args: string[]): Promise<string>;
declare function makeKeychain(_network: CLINetworkAdapter, args: string[]): Promise<string>;
declare function contractFunctionCall(_network: CLINetworkAdapter, args: string[]): Promise<string>;
declare function decodeCV(_network: CLINetworkAdapter, args: string[]): Promise<string>;
declare function addressConvert(_network: CLINetworkAdapter, args: string[]): Promise<string>;
declare function canStack(_network: CLINetworkAdapter, args: string[]): Promise<string>;
declare function register(_network: CLINetworkAdapter, args: string[]): Promise<string>;
declare function preorder(_network: CLINetworkAdapter, args: string[]): Promise<string>;
export declare function CLIMain(): void;
export declare const testables: {
    addressConvert: typeof addressConvert;
    decodeCV: typeof decodeCV;
    canStack: typeof canStack;
    contractFunctionCall: typeof contractFunctionCall;
    getStacksWalletKey: typeof getStacksWalletKey;
    makeKeychain: typeof makeKeychain;
    migrateSubdomains: typeof migrateSubdomains;
    preorder: typeof preorder;
    register: typeof register;
} | undefined;
export {};
