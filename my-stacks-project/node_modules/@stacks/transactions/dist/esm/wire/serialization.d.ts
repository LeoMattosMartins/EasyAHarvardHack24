import { BytesReader } from '../BytesReader';
import { AddressWire, AssetWire, LengthPrefixedList, LengthPrefixedStringWire, MemoStringWire, MessageSignatureWire, PayloadInput, PayloadWire, PostConditionPrincipalWire, PostConditionWire, PublicKeyWire, TransactionAuthFieldWire } from './types';
export declare function serializeAddress(address: AddressWire): string;
export declare function serializePrincipal(principal: PostConditionPrincipalWire): string;
export declare function serializeLPString(lps: LengthPrefixedStringWire): string;
export declare function serializeMemoString(memoString: MemoStringWire): string;
export declare function serializeAsset(info: AssetWire): string;
export declare function serializeLPList(lpList: LengthPrefixedList): string;
export declare function serializePostConditionWire(postCondition: PostConditionWire): string;
export declare function serializePayload(payload: PayloadInput): string;
export declare function serializePayloadBytes(payload: PayloadInput): Uint8Array;
export declare function deserializePayload(serialized: string | Uint8Array | BytesReader): PayloadWire;
export declare function deserializeMessageSignature(serialized: string | Uint8Array | BytesReader): MessageSignatureWire;
export declare function deserializeTransactionAuthField(serialized: string | Uint8Array | BytesReader): TransactionAuthFieldWire;
export declare function serializeMessageSignature(messageSignature: MessageSignatureWire): string;
export declare function serializeMessageSignatureBytes(messageSignature: MessageSignatureWire): Uint8Array;
export declare function serializeTransactionAuthField(field: TransactionAuthFieldWire): string;
export declare function serializeTransactionAuthFieldBytes(field: TransactionAuthFieldWire): Uint8Array;
export declare function serializePublicKey(key: PublicKeyWire): string;
export declare function serializePublicKeyBytes(key: PublicKeyWire): Uint8Array;
export declare function deserializePublicKey(serialized: string | Uint8Array | BytesReader): PublicKeyWire;
